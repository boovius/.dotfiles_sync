# Make Tab autocomplete regardless of filename case
set completion-ignore-case on

# List all matches in case multiple possible completions are possible
set show-all-if-ambiguous on

# Immediately add a trailing slash when autocompleting symlinks to directories
set mark-symlinked-directories on

# Do not autocomplete hidden files unless the pattern explicitly begins with a dot
set match-hidden-files off

# Show all autocomplete results at once
set page-completions off

# Immediately show all possible completions
set show-all-if-ambiguous on

# If there are more than 200 possible completions for a word, ask to show them all
set completion-query-items 200

# Show extra file information when completing, like `ls -F` does
set visible-stats on

# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on

# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set input-meta on
set output-meta on
set convert-meta off

##############################################################################
# Bind emacs style things within vim command line editing
# https://misha.brukman.net/blog/2019/12/uniting-vim-and-emacs-in-zsh/
# https://www.techrepublic.com/blog/linux-and-open-source/using-vi-key-bindings-in-bash-and-zsh/
# But still use emacs-style zsh bindings (e.g., ctrl-r)
#bindkey -e
##############################################################################
#
# Use vim-style zsh bindings (.e.g. f ( )
bindkey -v

bindkey "^A" beginning-of-line
bindkey "^E" end-of-line
bindkey "^K" kill-line
bindkey "^L" clear-screen
bindkey "^R" history-incremental-search-backward
bindkey "^U" kill-whole-line
bindkey "^W" backward-kill-word
bindkey "^Y" yank
bindkey "^R" history-incremental-search-backward
bindkey "^P" up-history
bindkey "^N" down-history

##############################################################################
# OLD BASH INPUTRC                                                           #
##############################################################################
## https://vi.stackexchange.com/questions/16355/how-to-run-the-history-search-in-vi-mode-in-bash
#"\C-r": reverse-search-history
#"\C-s": forward-search-history
#"\C-o": operate-and-get-next
#
## Use the text that has already been typed as the prefix for searching through
## commands (i.e. more intelligent Up/Down behavior)
#"\e[B": history-search-forward
#"\e[A": history-search-backward
## Use Alt/Meta + Delete to delete the preceding word
#"\e[3;3~": kill-word

